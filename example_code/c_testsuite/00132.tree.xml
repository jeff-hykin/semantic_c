<translation_unit>
    <preproc_include>
        <#include text="#include" />
        <system_lib_string text="<stdio.h>" />
    </preproc_include>
    <function_definition>
        <primitive_type text="int" />
        <function_declarator>
            <identifier text="main" />
            <parameter_list>
                <"(" text="(" />
                <")" text=")" />
            </parameter_list>
        </function_declarator>
        <compound_statement>
            <"{" text="{" />
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="Hello world" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <declaration>
                <primitive_type text="int" />
                <identifier text="Count" />
                <";" text=";" />
            </declaration>
            <for_statement>
                <for text="for" />
                <"(" text="(" />
                <assignment_expression>
                    <identifier text="Count" />
                    <"=" text="=" />
                    <number_literal text="-5" />
                </assignment_expression>
                <";" text=";" />
                <binary_expression>
                    <identifier text="Count" />
                    <"<=" text="<=" />
                    <number_literal text="5" />
                </binary_expression>
                <";" text=";" />
                <update_expression>
                    <identifier text="Count" />
                    <"++" text="++" />
                </update_expression>
                <")" text=")" />
                <expression_statement>
                    <call_expression>
                        <identifier text="printf" />
                        <argument_list>
                            <"(" text="(" />
                            <string_literal>
                                <"\"" text="\"" />
                                <string_content text="Count = %d" />
                                <escape_sequence text="\\n" />
                                <"\"" text="\"" />
                            </string_literal>
                            <"," text="," />
                            <identifier text="Count" />
                            <")" text=")" />
                        </argument_list>
                    </call_expression>
                    <";" text=";" />
                </expression_statement>
            </for_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="String 'hello', 'there' is '%s', '%s'" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="hello" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="there" />
                            <"\"" text="\"" />
                        </string_literal>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="Character 'A' is '%c'" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <number_literal text="65" />
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="Character 'a' is '%c'" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <char_literal>
                            <"'" text="'" />
                            <character text="a" />
                            <"'" text="'" />
                        </char_literal>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <return_statement>
                <return text="return" />
                <number_literal text="0" />
                <";" text=";" />
            </return_statement>
            <"}" text="}" />
        </compound_statement>
    </function_definition>
    <comment text="// vim: set expandtab ts=4 sw=3 sts=3 tw=80 :" />
</translation_unit>
