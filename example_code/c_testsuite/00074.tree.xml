<translation_unit>
    <preproc_if>
        <#if text="#if" />
        <preproc_defined>
            <defined text="defined" />
            <identifier text="X" />
        </preproc_defined>
        <"\n" text="\n" />
        <ERROR>
            <identifier text="X" />
        </ERROR>
        <#endif text="#endif" />
    </preproc_if>
    <preproc_if>
        <#if text="#if" />
        <preproc_defined>
            <defined text="defined" />
            <"(" text="(" />
            <identifier text="X" />
            <")" text=")" />
        </preproc_defined>
        <"\n" text="\n" />
        <ERROR>
            <identifier text="X" />
        </ERROR>
        <#endif text="#endif" />
    </preproc_if>
    <preproc_if>
        <#if text="#if" />
        <identifier text="X" />
        <"\n" text="\n" />
        <ERROR>
            <identifier text="X" />
        </ERROR>
        <#endif text="#endif" />
    </preproc_if>
    <preproc_def>
        <#define text="#define" />
        <identifier text="X" />
        <preproc_arg text="0" />
    </preproc_def>
    <preproc_if>
        <#if text="#if" />
        <identifier text="X" />
        <"\n" text="\n" />
        <ERROR>
            <identifier text="X" />
        </ERROR>
        <#endif text="#endif" />
    </preproc_if>
    <preproc_if>
        <#if text="#if" />
        <preproc_defined>
            <defined text="defined" />
            <"(" text="(" />
            <identifier text="X" />
            <")" text=")" />
        </preproc_defined>
        <"\n" text="\n" />
        <declaration>
            <primitive_type text="int" />
            <init_declarator>
                <identifier text="x" />
                <"=" text="=" />
                <number_literal text="0" />
            </init_declarator>
            <";" text=";" />
        </declaration>
        <#endif text="#endif" />
    </preproc_if>
    <preproc_call>
        <preproc_directive text="#undef" />
        <preproc_arg text="X" />
    </preproc_call>
    <preproc_def>
        <#define text="#define" />
        <identifier text="X" />
        <preproc_arg text="1" />
    </preproc_def>
    <preproc_if>
        <#if text="#if" />
        <identifier text="X" />
        <"\n" text="\n" />
        <function_definition>
            <primitive_type text="int" />
            <function_declarator>
                <identifier text="main" />
                <parameter_list>
                    <"(" text="(" />
                    <")" text=")" />
                </parameter_list>
            </function_declarator>
            <compound_statement>
                <"{" text="{" />
                <return_statement>
                    <return text="return" />
                    <number_literal text="0" />
                    <";" text=";" />
                </return_statement>
                <"}" text="}" />
            </compound_statement>
        </function_definition>
        <#endif text="#endif" />
    </preproc_if>
</translation_unit>
