<translation_unit>
    <preproc_include>
        <#include text="#include" />
        <system_lib_string text="<stdio.h>" />
    </preproc_include>
    <function_definition>
        <primitive_type text="int" />
        <function_declarator>
            <identifier text="main" />
            <parameter_list>
                <"(" text="(" />
                <")" text=")" />
            </parameter_list>
        </function_declarator>
        <compound_statement>
            <"{" text="{" />
            <declaration>
                <primitive_type text="int" />
                <identifier text="a" />
                <";" text=";" />
            </declaration>
            <declaration>
                <primitive_type text="int" />
                <identifier text="b" />
                <";" text=";" />
            </declaration>
            <declaration>
                <primitive_type text="int" />
                <identifier text="c" />
                <";" text=";" />
            </declaration>
            <declaration>
                <primitive_type text="int" />
                <identifier text="d" />
                <";" text=";" />
            </declaration>
            <declaration>
                <primitive_type text="int" />
                <identifier text="e" />
                <";" text=";" />
            </declaration>
            <declaration>
                <primitive_type text="int" />
                <identifier text="f" />
                <";" text=";" />
            </declaration>
            <declaration>
                <primitive_type text="int" />
                <identifier text="x" />
                <";" text=";" />
            </declaration>
            <declaration>
                <primitive_type text="int" />
                <identifier text="y" />
                <";" text=";" />
            </declaration>
            <expression_statement>
                <assignment_expression>
                    <identifier text="a" />
                    <"=" text="=" />
                    <number_literal text="12" />
                </assignment_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <assignment_expression>
                    <identifier text="b" />
                    <"=" text="=" />
                    <number_literal text="34" />
                </assignment_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <assignment_expression>
                    <identifier text="c" />
                    <"=" text="=" />
                    <number_literal text="56" />
                </assignment_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <assignment_expression>
                    <identifier text="d" />
                    <"=" text="=" />
                    <number_literal text="78" />
                </assignment_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <assignment_expression>
                    <identifier text="e" />
                    <"=" text="=" />
                    <number_literal text="0" />
                </assignment_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <assignment_expression>
                    <identifier text="f" />
                    <"=" text="=" />
                    <number_literal text="1" />
                </assignment_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="%d" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <binary_expression>
                            <identifier text="c" />
                            <"+" text="+" />
                            <identifier text="d" />
                        </binary_expression>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="%d" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <parenthesized_expression>
                            <"(" text="(" />
                            <assignment_expression>
                                <identifier text="y" />
                                <"=" text="=" />
                                <binary_expression>
                                    <identifier text="c" />
                                    <"+" text="+" />
                                    <identifier text="d" />
                                </binary_expression>
                            </assignment_expression>
                            <")" text=")" />
                        </parenthesized_expression>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="%d" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <binary_expression>
                            <identifier text="e" />
                            <"||" text="||" />
                            <binary_expression>
                                <identifier text="e" />
                                <"&&" text="&&" />
                                <identifier text="f" />
                            </binary_expression>
                        </binary_expression>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="%d" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <binary_expression>
                            <identifier text="e" />
                            <"||" text="||" />
                            <binary_expression>
                                <identifier text="f" />
                                <"&&" text="&&" />
                                <identifier text="f" />
                            </binary_expression>
                        </binary_expression>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="%d" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <binary_expression>
                            <binary_expression>
                                <identifier text="e" />
                                <"&&" text="&&" />
                                <identifier text="e" />
                            </binary_expression>
                            <"||" text="||" />
                            <identifier text="f" />
                        </binary_expression>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="%d" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <binary_expression>
                            <binary_expression>
                                <identifier text="e" />
                                <"&&" text="&&" />
                                <identifier text="f" />
                            </binary_expression>
                            <"||" text="||" />
                            <identifier text="f" />
                        </binary_expression>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="%d" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <binary_expression>
                            <identifier text="a" />
                            <"&&" text="&&" />
                            <binary_expression>
                                <identifier text="f" />
                                <"|" text="|" />
                                <identifier text="f" />
                            </binary_expression>
                        </binary_expression>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="%d" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <binary_expression>
                            <identifier text="a" />
                            <"|" text="|" />
                            <binary_expression>
                                <identifier text="b" />
                                <"^" text="^" />
                                <binary_expression>
                                    <identifier text="c" />
                                    <"&" text="&" />
                                    <identifier text="d" />
                                </binary_expression>
                            </binary_expression>
                        </binary_expression>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="%d, %d" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <binary_expression>
                            <identifier text="a" />
                            <"==" text="==" />
                            <identifier text="a" />
                        </binary_expression>
                        <"," text="," />
                        <binary_expression>
                            <identifier text="a" />
                            <"==" text="==" />
                            <identifier text="b" />
                        </binary_expression>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="%d, %d" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <binary_expression>
                            <identifier text="a" />
                            <"!=" text="!=" />
                            <identifier text="a" />
                        </binary_expression>
                        <"," text="," />
                        <binary_expression>
                            <identifier text="a" />
                            <"!=" text="!=" />
                            <identifier text="b" />
                        </binary_expression>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="%d" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <binary_expression>
                            <binary_expression>
                                <identifier text="a" />
                                <"!=" text="!=" />
                                <identifier text="b" />
                            </binary_expression>
                            <"&&" text="&&" />
                            <binary_expression>
                                <identifier text="c" />
                                <"!=" text="!=" />
                                <identifier text="d" />
                            </binary_expression>
                        </binary_expression>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="%d" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <binary_expression>
                            <identifier text="a" />
                            <"+" text="+" />
                            <binary_expression>
                                <binary_expression>
                                    <identifier text="b" />
                                    <"*" text="*" />
                                    <identifier text="c" />
                                </binary_expression>
                                <"/" text="/" />
                                <identifier text="f" />
                            </binary_expression>
                        </binary_expression>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="%d" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <binary_expression>
                            <identifier text="a" />
                            <"+" text="+" />
                            <binary_expression>
                                <binary_expression>
                                    <identifier text="b" />
                                    <"*" text="*" />
                                    <identifier text="c" />
                                </binary_expression>
                                <"/" text="/" />
                                <identifier text="f" />
                            </binary_expression>
                        </binary_expression>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="%d" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <parenthesized_expression>
                            <"(" text="(" />
                            <binary_expression>
                                <number_literal text="4" />
                                <"<<" text="<<" />
                                <number_literal text="4" />
                            </binary_expression>
                            <")" text=")" />
                        </parenthesized_expression>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="printf" />
                    <argument_list>
                        <"(" text="(" />
                        <string_literal>
                            <"\"" text="\"" />
                            <string_content text="%d" />
                            <escape_sequence text="\\n" />
                            <"\"" text="\"" />
                        </string_literal>
                        <"," text="," />
                        <parenthesized_expression>
                            <"(" text="(" />
                            <binary_expression>
                                <number_literal text="64" />
                                <">>" text=">>" />
                                <number_literal text="4" />
                            </binary_expression>
                            <")" text=")" />
                        </parenthesized_expression>
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <return_statement>
                <return text="return" />
                <number_literal text="0" />
                <";" text=";" />
            </return_statement>
            <"}" text="}" />
        </compound_statement>
    </function_definition>
    <comment text="// vim: set expandtab ts=4 sw=3 sts=3 tw=80 :" />
</translation_unit>
