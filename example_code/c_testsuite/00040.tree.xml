<translation_unit>
    <preproc_include>
        <#include text="#include" />
        <system_lib_string text="<stdlib.h>" />
    </preproc_include>
    <declaration>
        <primitive_type text="int" />
        <identifier text="N" />
        <";" text=";" />
    </declaration>
    <declaration>
        <primitive_type text="int" />
        <pointer_declarator>
            <"*" text="*" />
            <identifier text="t" />
        </pointer_declarator>
        <";" text=";" />
    </declaration>
    <function_definition>
        <primitive_type text="int" />
        <function_declarator>
            <identifier text="chk" />
            <parameter_list>
                <"(" text="(" />
                <parameter_declaration>
                    <primitive_type text="int" />
                    <identifier text="x" />
                </parameter_declaration>
                <"," text="," />
                <parameter_declaration>
                    <primitive_type text="int" />
                    <identifier text="y" />
                </parameter_declaration>
                <")" text=")" />
            </parameter_list>
        </function_declarator>
        <compound_statement>
            <"{" text="{" />
            <declaration>
                <primitive_type text="int" />
                <identifier text="i" />
                <";" text=";" />
            </declaration>
            <declaration>
                <primitive_type text="int" />
                <identifier text="r" />
                <";" text=";" />
            </declaration>
            <for_statement>
                <for text="for" />
                <"(" text="(" />
                <assignment_expression>
                    <identifier text="r" />
                    <"=" text="=" />
                    <assignment_expression>
                        <identifier text="i" />
                        <"=" text="=" />
                        <number_literal text="0" />
                    </assignment_expression>
                </assignment_expression>
                <";" text=";" />
                <binary_expression>
                    <identifier text="i" />
                    <"<" text="<" />
                    <number_literal text="8" />
                </binary_expression>
                <";" text=";" />
                <update_expression>
                    <identifier text="i" />
                    <"++" text="++" />
                </update_expression>
                <")" text=")" />
                <compound_statement>
                    <"{" text="{" />
                    <expression_statement>
                        <assignment_expression>
                            <identifier text="r" />
                            <"=" text="=" />
                            <binary_expression>
                                <identifier text="r" />
                                <"+" text="+" />
                                <subscript_expression>
                                    <identifier text="t" />
                                    <"[" text="[" />
                                    <binary_expression>
                                        <identifier text="x" />
                                        <"+" text="+" />
                                        <binary_expression>
                                            <number_literal text="8" />
                                            <"*" text="*" />
                                            <identifier text="i" />
                                        </binary_expression>
                                    </binary_expression>
                                    <"]" text="]" />
                                </subscript_expression>
                            </binary_expression>
                        </assignment_expression>
                        <";" text=";" />
                    </expression_statement>
                    <expression_statement>
                        <assignment_expression>
                            <identifier text="r" />
                            <"=" text="=" />
                            <binary_expression>
                                <identifier text="r" />
                                <"+" text="+" />
                                <subscript_expression>
                                    <identifier text="t" />
                                    <"[" text="[" />
                                    <binary_expression>
                                        <identifier text="i" />
                                        <"+" text="+" />
                                        <binary_expression>
                                            <number_literal text="8" />
                                            <"*" text="*" />
                                            <identifier text="y" />
                                        </binary_expression>
                                    </binary_expression>
                                    <"]" text="]" />
                                </subscript_expression>
                            </binary_expression>
                        </assignment_expression>
                        <";" text=";" />
                    </expression_statement>
                    <if_statement>
                        <if text="if" />
                        <parenthesized_expression>
                            <"(" text="(" />
                            <binary_expression>
                                <binary_expression>
                                    <binary_expression>
                                        <identifier text="x" />
                                        <"+" text="+" />
                                        <identifier text="i" />
                                    </binary_expression>
                                    <"<" text="<" />
                                    <number_literal text="8" />
                                </binary_expression>
                                <"&" text="&" />
                                <binary_expression>
                                    <binary_expression>
                                        <identifier text="y" />
                                        <"+" text="+" />
                                        <identifier text="i" />
                                    </binary_expression>
                                    <"<" text="<" />
                                    <number_literal text="8" />
                                </binary_expression>
                            </binary_expression>
                            <")" text=")" />
                        </parenthesized_expression>
                        <expression_statement>
                            <assignment_expression>
                                <identifier text="r" />
                                <"=" text="=" />
                                <binary_expression>
                                    <identifier text="r" />
                                    <"+" text="+" />
                                    <subscript_expression>
                                        <identifier text="t" />
                                        <"[" text="[" />
                                        <binary_expression>
                                            <binary_expression>
                                                <identifier text="x" />
                                                <"+" text="+" />
                                                <identifier text="i" />
                                            </binary_expression>
                                            <"+" text="+" />
                                            <binary_expression>
                                                <number_literal text="8" />
                                                <"*" text="*" />
                                                <parenthesized_expression>
                                                    <"(" text="(" />
                                                    <binary_expression>
                                                        <identifier text="y" />
                                                        <"+" text="+" />
                                                        <identifier text="i" />
                                                    </binary_expression>
                                                    <")" text=")" />
                                                </parenthesized_expression>
                                            </binary_expression>
                                        </binary_expression>
                                        <"]" text="]" />
                                    </subscript_expression>
                                </binary_expression>
                            </assignment_expression>
                            <";" text=";" />
                        </expression_statement>
                    </if_statement>
                    <if_statement>
                        <if text="if" />
                        <parenthesized_expression>
                            <"(" text="(" />
                            <binary_expression>
                                <binary_expression>
                                    <binary_expression>
                                        <identifier text="x" />
                                        <"+" text="+" />
                                        <identifier text="i" />
                                    </binary_expression>
                                    <"<" text="<" />
                                    <number_literal text="8" />
                                </binary_expression>
                                <"&" text="&" />
                                <binary_expression>
                                    <binary_expression>
                                        <identifier text="y" />
                                        <"-" text="-" />
                                        <identifier text="i" />
                                    </binary_expression>
                                    <">=" text=">=" />
                                    <number_literal text="0" />
                                </binary_expression>
                            </binary_expression>
                            <")" text=")" />
                        </parenthesized_expression>
                        <expression_statement>
                            <assignment_expression>
                                <identifier text="r" />
                                <"=" text="=" />
                                <binary_expression>
                                    <identifier text="r" />
                                    <"+" text="+" />
                                    <subscript_expression>
                                        <identifier text="t" />
                                        <"[" text="[" />
                                        <binary_expression>
                                            <binary_expression>
                                                <identifier text="x" />
                                                <"+" text="+" />
                                                <identifier text="i" />
                                            </binary_expression>
                                            <"+" text="+" />
                                            <binary_expression>
                                                <number_literal text="8" />
                                                <"*" text="*" />
                                                <parenthesized_expression>
                                                    <"(" text="(" />
                                                    <binary_expression>
                                                        <identifier text="y" />
                                                        <"-" text="-" />
                                                        <identifier text="i" />
                                                    </binary_expression>
                                                    <")" text=")" />
                                                </parenthesized_expression>
                                            </binary_expression>
                                        </binary_expression>
                                        <"]" text="]" />
                                    </subscript_expression>
                                </binary_expression>
                            </assignment_expression>
                            <";" text=";" />
                        </expression_statement>
                    </if_statement>
                    <if_statement>
                        <if text="if" />
                        <parenthesized_expression>
                            <"(" text="(" />
                            <binary_expression>
                                <binary_expression>
                                    <binary_expression>
                                        <identifier text="x" />
                                        <"-" text="-" />
                                        <identifier text="i" />
                                    </binary_expression>
                                    <">=" text=">=" />
                                    <number_literal text="0" />
                                </binary_expression>
                                <"&" text="&" />
                                <binary_expression>
                                    <binary_expression>
                                        <identifier text="y" />
                                        <"+" text="+" />
                                        <identifier text="i" />
                                    </binary_expression>
                                    <"<" text="<" />
                                    <number_literal text="8" />
                                </binary_expression>
                            </binary_expression>
                            <")" text=")" />
                        </parenthesized_expression>
                        <expression_statement>
                            <assignment_expression>
                                <identifier text="r" />
                                <"=" text="=" />
                                <binary_expression>
                                    <identifier text="r" />
                                    <"+" text="+" />
                                    <subscript_expression>
                                        <identifier text="t" />
                                        <"[" text="[" />
                                        <binary_expression>
                                            <binary_expression>
                                                <identifier text="x" />
                                                <"-" text="-" />
                                                <identifier text="i" />
                                            </binary_expression>
                                            <"+" text="+" />
                                            <binary_expression>
                                                <number_literal text="8" />
                                                <"*" text="*" />
                                                <parenthesized_expression>
                                                    <"(" text="(" />
                                                    <binary_expression>
                                                        <identifier text="y" />
                                                        <"+" text="+" />
                                                        <identifier text="i" />
                                                    </binary_expression>
                                                    <")" text=")" />
                                                </parenthesized_expression>
                                            </binary_expression>
                                        </binary_expression>
                                        <"]" text="]" />
                                    </subscript_expression>
                                </binary_expression>
                            </assignment_expression>
                            <";" text=";" />
                        </expression_statement>
                    </if_statement>
                    <if_statement>
                        <if text="if" />
                        <parenthesized_expression>
                            <"(" text="(" />
                            <binary_expression>
                                <binary_expression>
                                    <binary_expression>
                                        <identifier text="x" />
                                        <"-" text="-" />
                                        <identifier text="i" />
                                    </binary_expression>
                                    <">=" text=">=" />
                                    <number_literal text="0" />
                                </binary_expression>
                                <"&" text="&" />
                                <binary_expression>
                                    <binary_expression>
                                        <identifier text="y" />
                                        <"-" text="-" />
                                        <identifier text="i" />
                                    </binary_expression>
                                    <">=" text=">=" />
                                    <number_literal text="0" />
                                </binary_expression>
                            </binary_expression>
                            <")" text=")" />
                        </parenthesized_expression>
                        <expression_statement>
                            <assignment_expression>
                                <identifier text="r" />
                                <"=" text="=" />
                                <binary_expression>
                                    <identifier text="r" />
                                    <"+" text="+" />
                                    <subscript_expression>
                                        <identifier text="t" />
                                        <"[" text="[" />
                                        <binary_expression>
                                            <binary_expression>
                                                <identifier text="x" />
                                                <"-" text="-" />
                                                <identifier text="i" />
                                            </binary_expression>
                                            <"+" text="+" />
                                            <binary_expression>
                                                <number_literal text="8" />
                                                <"*" text="*" />
                                                <parenthesized_expression>
                                                    <"(" text="(" />
                                                    <binary_expression>
                                                        <identifier text="y" />
                                                        <"-" text="-" />
                                                        <identifier text="i" />
                                                    </binary_expression>
                                                    <")" text=")" />
                                                </parenthesized_expression>
                                            </binary_expression>
                                        </binary_expression>
                                        <"]" text="]" />
                                    </subscript_expression>
                                </binary_expression>
                            </assignment_expression>
                            <";" text=";" />
                        </expression_statement>
                    </if_statement>
                    <"}" text="}" />
                </compound_statement>
            </for_statement>
            <return_statement>
                <return text="return" />
                <identifier text="r" />
                <";" text=";" />
            </return_statement>
            <"}" text="}" />
        </compound_statement>
    </function_definition>
    <function_definition>
        <primitive_type text="int" />
        <function_declarator>
            <identifier text="go" />
            <parameter_list>
                <"(" text="(" />
                <parameter_declaration>
                    <primitive_type text="int" />
                    <identifier text="n" />
                </parameter_declaration>
                <"," text="," />
                <parameter_declaration>
                    <primitive_type text="int" />
                    <identifier text="x" />
                </parameter_declaration>
                <"," text="," />
                <parameter_declaration>
                    <primitive_type text="int" />
                    <identifier text="y" />
                </parameter_declaration>
                <")" text=")" />
            </parameter_list>
        </function_declarator>
        <compound_statement>
            <"{" text="{" />
            <if_statement>
                <if text="if" />
                <parenthesized_expression>
                    <"(" text="(" />
                    <binary_expression>
                        <identifier text="n" />
                        <"==" text="==" />
                        <number_literal text="8" />
                    </binary_expression>
                    <")" text=")" />
                </parenthesized_expression>
                <compound_statement>
                    <"{" text="{" />
                    <expression_statement>
                        <update_expression>
                            <identifier text="N" />
                            <"++" text="++" />
                        </update_expression>
                        <";" text=";" />
                    </expression_statement>
                    <return_statement>
                        <return text="return" />
                        <number_literal text="0" />
                        <";" text=";" />
                    </return_statement>
                    <"}" text="}" />
                </compound_statement>
            </if_statement>
            <for_statement>
                <for text="for" />
                <"(" text="(" />
                <";" text=";" />
                <binary_expression>
                    <identifier text="y" />
                    <"<" text="<" />
                    <number_literal text="8" />
                </binary_expression>
                <";" text=";" />
                <update_expression>
                    <identifier text="y" />
                    <"++" text="++" />
                </update_expression>
                <")" text=")" />
                <compound_statement>
                    <"{" text="{" />
                    <for_statement>
                        <for text="for" />
                        <"(" text="(" />
                        <";" text=";" />
                        <binary_expression>
                            <identifier text="x" />
                            <"<" text="<" />
                            <number_literal text="8" />
                        </binary_expression>
                        <";" text=";" />
                        <update_expression>
                            <identifier text="x" />
                            <"++" text="++" />
                        </update_expression>
                        <")" text=")" />
                        <if_statement>
                            <if text="if" />
                            <parenthesized_expression>
                                <"(" text="(" />
                                <binary_expression>
                                    <call_expression>
                                        <identifier text="chk" />
                                        <argument_list>
                                            <"(" text="(" />
                                            <identifier text="x" />
                                            <"," text="," />
                                            <identifier text="y" />
                                            <")" text=")" />
                                        </argument_list>
                                    </call_expression>
                                    <"==" text="==" />
                                    <number_literal text="0" />
                                </binary_expression>
                                <")" text=")" />
                            </parenthesized_expression>
                            <compound_statement>
                                <"{" text="{" />
                                <expression_statement>
                                    <update_expression>
                                        <subscript_expression>
                                            <identifier text="t" />
                                            <"[" text="[" />
                                            <binary_expression>
                                                <identifier text="x" />
                                                <"+" text="+" />
                                                <binary_expression>
                                                    <number_literal text="8" />
                                                    <"*" text="*" />
                                                    <identifier text="y" />
                                                </binary_expression>
                                            </binary_expression>
                                            <"]" text="]" />
                                        </subscript_expression>
                                        <"++" text="++" />
                                    </update_expression>
                                    <";" text=";" />
                                </expression_statement>
                                <expression_statement>
                                    <call_expression>
                                        <identifier text="go" />
                                        <argument_list>
                                            <"(" text="(" />
                                            <binary_expression>
                                                <identifier text="n" />
                                                <"+" text="+" />
                                                <number_literal text="1" />
                                            </binary_expression>
                                            <"," text="," />
                                            <identifier text="x" />
                                            <"," text="," />
                                            <identifier text="y" />
                                            <")" text=")" />
                                        </argument_list>
                                    </call_expression>
                                    <";" text=";" />
                                </expression_statement>
                                <expression_statement>
                                    <update_expression>
                                        <subscript_expression>
                                            <identifier text="t" />
                                            <"[" text="[" />
                                            <binary_expression>
                                                <identifier text="x" />
                                                <"+" text="+" />
                                                <binary_expression>
                                                    <number_literal text="8" />
                                                    <"*" text="*" />
                                                    <identifier text="y" />
                                                </binary_expression>
                                            </binary_expression>
                                            <"]" text="]" />
                                        </subscript_expression>
                                        <"--" text="--" />
                                    </update_expression>
                                    <";" text=";" />
                                </expression_statement>
                                <"}" text="}" />
                            </compound_statement>
                        </if_statement>
                    </for_statement>
                    <expression_statement>
                        <assignment_expression>
                            <identifier text="x" />
                            <"=" text="=" />
                            <number_literal text="0" />
                        </assignment_expression>
                        <";" text=";" />
                    </expression_statement>
                    <"}" text="}" />
                </compound_statement>
            </for_statement>
            <return_statement>
                <return text="return" />
                <number_literal text="0" />
                <";" text=";" />
            </return_statement>
            <"}" text="}" />
        </compound_statement>
    </function_definition>
    <function_definition>
        <primitive_type text="int" />
        <function_declarator>
            <identifier text="main" />
            <parameter_list>
                <"(" text="(" />
                <")" text=")" />
            </parameter_list>
        </function_declarator>
        <compound_statement>
            <"{" text="{" />
            <expression_statement>
                <assignment_expression>
                    <identifier text="t" />
                    <"=" text="=" />
                    <call_expression>
                        <identifier text="calloc" />
                        <argument_list>
                            <"(" text="(" />
                            <number_literal text="64" />
                            <"," text="," />
                            <sizeof_expression>
                                <sizeof text="sizeof" />
                                <"(" text="(" />
                                <type_descriptor>
                                    <primitive_type text="int" />
                                </type_descriptor>
                                <")" text=")" />
                            </sizeof_expression>
                            <")" text=")" />
                        </argument_list>
                    </call_expression>
                </assignment_expression>
                <";" text=";" />
            </expression_statement>
            <expression_statement>
                <call_expression>
                    <identifier text="go" />
                    <argument_list>
                        <"(" text="(" />
                        <number_literal text="0" />
                        <"," text="," />
                        <number_literal text="0" />
                        <"," text="," />
                        <number_literal text="0" />
                        <")" text=")" />
                    </argument_list>
                </call_expression>
                <";" text=";" />
            </expression_statement>
            <if_statement>
                <if text="if" />
                <parenthesized_expression>
                    <"(" text="(" />
                    <binary_expression>
                        <identifier text="N" />
                        <"!=" text="!=" />
                        <number_literal text="92" />
                    </binary_expression>
                    <")" text=")" />
                </parenthesized_expression>
                <return_statement>
                    <return text="return" />
                    <number_literal text="1" />
                    <";" text=";" />
                </return_statement>
            </if_statement>
            <return_statement>
                <return text="return" />
                <number_literal text="0" />
                <";" text=";" />
            </return_statement>
            <"}" text="}" />
        </compound_statement>
    </function_definition>
</translation_unit>
